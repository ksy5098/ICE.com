// Generated by view binder compiler. Do not edit!
package com.example.icecom_2019111635.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.icecom_2019111635.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMain2Binding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView productDetail2;

  @NonNull
  public final ScrollView productDetail2Scroll;

  @NonNull
  public final ImageView productImg2;

  @NonNull
  public final ImageView productImg22;

  @NonNull
  public final TextView productName2;

  @NonNull
  public final TextView productPrice2;

  @NonNull
  public final TextView productWebsite;

  private ActivityMain2Binding(@NonNull ConstraintLayout rootView, @NonNull TextView productDetail2,
      @NonNull ScrollView productDetail2Scroll, @NonNull ImageView productImg2,
      @NonNull ImageView productImg22, @NonNull TextView productName2,
      @NonNull TextView productPrice2, @NonNull TextView productWebsite) {
    this.rootView = rootView;
    this.productDetail2 = productDetail2;
    this.productDetail2Scroll = productDetail2Scroll;
    this.productImg2 = productImg2;
    this.productImg22 = productImg22;
    this.productName2 = productName2;
    this.productPrice2 = productPrice2;
    this.productWebsite = productWebsite;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMain2Binding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMain2Binding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main2, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMain2Binding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.product_detail2;
      TextView productDetail2 = ViewBindings.findChildViewById(rootView, id);
      if (productDetail2 == null) {
        break missingId;
      }

      id = R.id.product_detail2_scroll;
      ScrollView productDetail2Scroll = ViewBindings.findChildViewById(rootView, id);
      if (productDetail2Scroll == null) {
        break missingId;
      }

      id = R.id.product_img2;
      ImageView productImg2 = ViewBindings.findChildViewById(rootView, id);
      if (productImg2 == null) {
        break missingId;
      }

      id = R.id.product_img22;
      ImageView productImg22 = ViewBindings.findChildViewById(rootView, id);
      if (productImg22 == null) {
        break missingId;
      }

      id = R.id.product_name2;
      TextView productName2 = ViewBindings.findChildViewById(rootView, id);
      if (productName2 == null) {
        break missingId;
      }

      id = R.id.product_price2;
      TextView productPrice2 = ViewBindings.findChildViewById(rootView, id);
      if (productPrice2 == null) {
        break missingId;
      }

      id = R.id.product_website;
      TextView productWebsite = ViewBindings.findChildViewById(rootView, id);
      if (productWebsite == null) {
        break missingId;
      }

      return new ActivityMain2Binding((ConstraintLayout) rootView, productDetail2,
          productDetail2Scroll, productImg2, productImg22, productName2, productPrice2,
          productWebsite);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
